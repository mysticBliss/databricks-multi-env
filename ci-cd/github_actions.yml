name: Creating Infrastructure with Terraform

on:
  push:
    branches:
      - main
    paths:
      - 'shared/unity-catalog/**'
      - 'workspace/ws-datalake/**'
      - 'configs/commons/**'
      - 'configs/environments/**'
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Run Terraform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, pre, prod]

    env:
      # Azure environment variables
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '~> 1.9'

      - name: Initialize Terraform
        run: |
          terraform init

      - name: Apply Terraform Unity Catalog
        run: |
          cd shared/unity-catalog
          terraform plan --var-file="../../configs/commons/unity-catalog.tfvars"
          terraform apply --var-file="../../configs/commons/unity-catalog.tfvars" -auto-approve

      - name: Manage Workspaces and Apply Terraform for Environments
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          cd workspace/ws-datalake
          terraform workspace new -force ${{ matrix.environment }}
          terraform workspace select ${{ matrix.environment }}
          terraform plan --var-file="../../configs/environments/${{ matrix.environment }}.tfvars"
          terraform apply --var-file="../../configs/environments/${{ matrix.environment }}.tfvars" -auto-approve
