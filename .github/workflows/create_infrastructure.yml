name: Creating Infrastructure with Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  setup-terraform:
    name: Setup Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

  apply-terraform:
    name: Apply Terraform
    runs-on: ubuntu-latest
    needs: setup-terraform
    strategy:
      matrix:
        environment: [dev, pre, prod]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Apply Terraform Unity Catalog
        run: |
          cd shared/unity-catalog
          terraform init
          terraform plan --var-file="../../configs/commons/unity-catalog.tfvars"
          terraform apply --var-file="../../configs/commons/unity-catalog.tfvars" -auto-approve

      - name: Manage Workspaces and Apply Terraform for ${{ matrix.environment }}
        run: |
          cd workspace/ws-datalake
          terraform init

          # Create workspace if it doesn't exist
          terraform workspace new ${{ matrix.environment }} || true
          terraform workspace select ${{ matrix.environment }}
          terraform init
          terraform plan --var-file="../../configs/environments/${{ matrix.environment }}.tfvars"
          terraform apply --var-file="../../configs/environments/${{ matrix.environment }}.tfvars" -auto-approve
