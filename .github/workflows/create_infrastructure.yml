name: Terraform Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  setup-terraform:
    name: Setup Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Log in to Azure
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  apply-unity-catalog:
    name: Apply Terraform Unity Catalog
    runs-on: ubuntu-latest
    needs: setup-terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Apply Terraform Unity Catalog
        run: |
          cd shared/unity-catalog
          terraform init
          terraform plan --var-file="../../configs/commons/unity-catalog.tfvars"
          terraform apply --var-file="../../configs/commons/unity-catalog.tfvars" -auto-approve

  apply-environment:
    name: Apply Terraform for ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [apply-unity-catalog, setup-terraform]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Manage Workspaces and Apply Terraform
        run: |
          cd workspace/ws-datalake
          terraform init

          # Create workspace if it doesn't exist
          terraform workspace new ${{ inputs.environment }} || true
          terraform workspace select ${{ inputs.environment }}
          terraform init
          terraform plan --var-file="../../configs/environments/${{ inputs.environment }}.tfvars"
          terraform apply --var-file="../../configs/environments/${{ inputs.environment }}.tfvars" -auto-approve
